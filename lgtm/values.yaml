loki:
  loki:
    global:
      extraEnvFrom:
        - secretRef:
            name: loki-s3-creds
    # loki:
    # https://grafana.com/docs/loki/latest/setup/install/helm/install-monolithic/
    commonConfig:
      replication_factor: 1
    schemaConfig:
      configs:
        - from: "2024-04-01"
          store: tsdb
          object_store: s3
          schema: v13
          index:
            prefix: loki_index_
            period: 24h
    pattern_ingester:
      enabled: true
    limits_config:
      allow_structured_metadata: true
      volume_enabled: true
    ruler:
      enable_api: true

    storage:
      bucketNames:
        chunks: loki-chunks
        ruler: loki-ruler
        admin: loki-admin
      s3:
        # Values if minio was enabled:
        # https://github.com/grafana/loki/blob/main/production/helm/loki/templates/_helpers.tpl#L213C2-L218C17
        endpoint: tales-tenant-hl.tales-tenant.svc:9000
        bucketnames: chunks
        secretAccessKey: "$(LOKI_SECRET_ACCESS_KEY)"
        accessKeyId: "$(LOKI_ACCESS_KEY_ID)"
        s3ForcePathStyle: true
        # Obviously not the best but hey.
        insecure: true

  # We have minio at home.
  minio:
    enabled: false
  resultsCache:
    allocatedMemory: 128
  chunksCache:
    # in MB
    allocatedMemory: 512

  deploymentMode: SingleBinary
  singleBinary:
    replicas: 1
    persistence:
      enableStatefulSetAutoDeletePVC: true
      storageClass: "directpv-min-io"
      size: "10Gi"

  # Zero out replica counts of other deployment modes
  backend:
    replicas: 0
  read:
    replicas: 0
  write:
    replicas: 0

  ingester:
    replicas: 0
  querier:
    replicas: 0
  queryFrontend:
    replicas: 0
  queryScheduler:
    replicas: 0
  distributor:
    replicas: 0
  compactor:
    replicas: 0
  indexGateway:
    replicas: 0
  bloomCompactor:
    replicas: 0
  bloomGateway:
    replicas: 0

mimir:
  nginx:
    enabled: false
