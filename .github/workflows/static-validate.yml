name: Static Validation

on:
  # This is cheap enough, just run it.
  push: {}
  pull_request: {}
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Tool cache
        uses: actions/cache@v4
        with:
          path: |
            /usr/local/bin
          key: ${{ runner.os }}-usr-local-bin
      - name: Install tools
        run: |
          set -euo pipefail
          pushd /usr/local/bin
          $GITHUB_WORKSPACE/ci-tools/eget.sh
          eget --upgrade-only yannh/kubeconform
          eget --upgrade-only grafana/tanka
          mv tanka tk
          eget --upgrade-only jsonnet-bundler/jsonnet-bundler
          mv jsonnet-bundler jb
          eget --upgrade-only https://get.helm.sh/helm-v3.18.2-linux-amd64.tar.gz --file helm
          popd
      - name: Find modules
        id: modules
        run: |
          set -euo pipefail
          charts=($(find "${{ github.workspace }}" -name Chart.yaml -exec dirname {} \;))
          echo "CHARTS=${charts[*]}" | tee -a "$GITHUB_OUTPUT"
          tanka=($(find "${{ github.workspace }}" -name jsonnetfile.json -exec dirname {} \;))
          echo "TANKA=${tanka[*]}" | tee -a "$GITHUB_OUTPUT"
          for c in "${!charts[@]}"; do
              charts[c]="${charts[c]}/charts"
          done
          for c in "${!tanka[@]}"; do
              tanka[c]="${tanka[c]}/vendor"
          done
          echo "CACHE_DIRS=${charts[*]} ${tanka[*]}" | tee -a "$GITHUB_OUTPUT"
      - name: Kubeconform schema cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.temp }}/cache/kubeconform
          key: ${{ runner.os }}-kubeconform
      - name: Deps cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.modules.outputs.CACHE_DIRS }}
          key: ${{ runner.os }}-deps
      - name: Check Tanka
        run: |
          set -euxo pipefail
          for dir in ${{ steps.modules.outputs.TANKA }}; do
            pushd "$dir"
            tk fmt -v -t .
            jb update
            #  -ignore-missing-schemas
            tk show environments/default \
              | kubeconform -cache "${{ runner.temp }}/cache/kubeconform" -strict -summary
            popd
          done
      - name: Check Helm charts
        run: |
          set -euxo pipefail
          for chart in ${{ steps.modules.outputs.CHARTS }}; do
            pushd "$chart"
            helm dep build
            helm lint .
            # --validate wants connection to the server
            helm template --dry-run=client . \
              | kubeconform -cache "${{ runner.temp }}/cache/kubeconform" -strict -summary
            popd
          done
