global:
  extraEnv:
    - name: SSL_CERT_FILE
      value: /etc/ssl/certs/ca-certificates.crt
  extraVolumes:
    - name: ca-certificates
      configMap:
        name: trust-bundle
  extraVolumeMounts:
    - name: ca-certificates
      mountPath: /etc/ssl/certs
      readOnly: true

k8s-monitoring:
  cluster:
    name: tales
  destinations:
    - name: localMimir
      type: prometheus
      url: http://mimir-distributor-headless.mimir.svc:8080/api/v1/push
    - name: localLoki
      type: loki
      url: http://loki-gateway.loki.svc/loki/api/v1/push

  # https://github.com/grafana/k8s-monitoring-helm/blob/main/charts/k8s-monitoring/charts/feature-cluster-metrics/values.yaml
  clusterMetrics:
    enabled: true
    controlPlane:
      enabled: true
    kubeProxy:
      # there isn't one, cilium replaces it.
      enabled: false
    windows-exporter:
      enabled: false
      deploy: false
    kepler:
      enabled: false
    opencost:
      enabled: false
  clusterEvents:
    enabled: true
    # logfmt version does NO escaping:
    # https://github.com/grafana/alloy/blob/main/internal/component/loki/source/kubernetes_events/event_controller.go#L303
    # to
    # https://github.com/grafana/alloy/blob/main/internal/component/loki/source/kubernetes_events/event_controller.go#L324
    logFormat: json
  nodeLogs:
    # Talos doesn't surface these through the filesystem.
    enabled: false
  podLogs:
    enabled: true
  prometheusOperatorObjects:
    enabled: true
  alloy-metrics:
    enabled: true
  alloy-singleton:
    enabled: true
  alloy-logs:
    enabled: true
    alloy:
      mounts:
        # /var/log/pods and /var/log/containers exist. (Also audit.)
        varlog: true
        dockercontainers: false

  alloy-receiver:
    enabled: false
  integrations:
    alloy:
      instances:
        - name: alloy
          namespace: alloy
          labelSelectors:
            app.kubernetes.io/name: [alloy-metrics, alloy-singleton, alloy-logs]
    cert-manager:
      instances:
        - name: cert-manager
          namespace: cert-manager
          labelSelectors:
            app.kubernetes.io/name: cert-manager
    # grafana:
    #   instances:
    #     - name: lgtm-grafana
    #       namespace: lgtm
    #       labelSelectors:
    #         app.kubernetes.io/name: grafana
    # loki:
    #   instances:
    #     - name: lgtm-loki
    #       namespace: lgtm
    #       labelSelectors:
    #         app.kubernetes.io/name: loki
    # mimir:
    #   instances:
    #     - name: lgtm-mimir
    #       namespace: lgtm
    #       labelSelectors:
    #         app.kubernetes.io/name: mimir

mimir-distributed:
  # We have minio at home.
  minio:
    enabled: false
  ingester:
    replicas: 1
    zoneAwareReplication:
      enabled: false
  querier:
    replicas: 1
  # query_frontend distributes among (1) querier.
  # query_frontend:
  #   enabled: false
  query_scheduler:
    enabled: false
  # This is for multi-tenant stuff.
  overrides_exporter:
    enabled: false
  admin_api:
    enabled: false
  store_gateway:
    zoneAwareReplication:
      enabled: false
  metaMonitoring:
    dashboards:
      enabled: true
    serviceMonitor:
      enabled: true
    prometheusRule:
      enabled: true
      mimirAlerts: true
      mimirRules: true
    grafanaAgent:
      enabled: false
  mimir:
    structuredConfig:
      multitenancy_enabled: false
      memberlist:
        cluster_label: mimir
        cluster_label_verification_disabled: false
        gossip_to_dead_nodes_time: 30s
        dead_node_reclaim_time: 1m
        abort_if_cluster_join_fails: true
        rejoin_interval: 5m
        message_history_buffer_bytes: 1048576
      common:
        storage:
          backend: s3
          s3:
            endpoint: minio.tales-tenant.svc
            access_key_id: "${ACCESS_KEY_ID}"
            secret_access_key: "${SECRET_ACCESS_KEY}"
      blocks_storage:
        s3:
          bucket_name: mimir-blocks

      alertmanager_storage:
        s3:
          bucket_name: mimir-alertmanager

      ruler_storage:
        s3:
          bucket_name: mimir-ruler
