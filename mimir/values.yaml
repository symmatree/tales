global:
  extraEnvFrom:
    - secretRef:
        name: lgtm-s3-creds
  extraEnv:
    - name: SSL_CERT_FILE
      value: /etc/ssl/certs/ca-certificates.crt
  extraVolumes:
    - name: ca-certificates
      configMap:
        name: trust-bundle
  extraVolumeMounts:
    - name: ca-certificates
      mountPath: /etc/ssl/certs
      readOnly: true
mimir-distributed:
  # We have minio at home.
  minio:
    enabled: false
  nginx:
    # https://grafana.com/docs/helm-charts/mimir-distributed/latest/migration-guides/migrate-to-unified-proxy-deployment/
    enabled: false
  gateway:
    enabledNonEnterprise: true
    service:
      # Maintain compat with existing in-cluster references.
      nameOverride: mimir-nginx
    ingress:
      enabled: true
      ingressClassName: cilium
      annotations:
        cert-manager.io/cluster-issuer: real-cert
      hosts:
        - host: mimir.local.symmatree.com
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: mimir-gateway-tls
          hosts:
            - mimir.local.symmatree.com

  image:
    pullSecrets:
    - ghcr-pull-secret
  # Make everyone Recreate to reduce pod overlaps that spoil the rings.
  alertmanager:
    strategy:
      type: Recreate
      rollingUpdate: null
    extraContainers:
    - name: alert-forward
      image: ghcr.io/symmatree/internal/mimir-webhook:2025-07-13
      ports:
        - name: webhook
          containerPort: 3000
          protocol: TCP
      env:
        - name: APPRISE_URL
          value: http://apprise.apprise.svc:8000/notify
        - name: APPRISE_KEY
          value: apprise
  ingester:
    replicas: 2
    zoneAwareReplication:
      enabled: false
    strategy:
      type: Recreate
      rollingUpdate: null
  querier:
    replicas: 1
  query_frontend:
    replicas: 1
  ruler:
    replicas: 1
  query_scheduler:
    replicas: 1
  # This is for multi-tenant stuff.
  overrides_exporter:
    enabled: false
  store_gateway:
    zoneAwareReplication:
      enabled: false
  metaMonitoring:
    dashboards:
      enabled: true
    serviceMonitor:
      enabled: true
      # Alloy sets this correctly, leave it alone.
      # The literal null and ~ both fail here, but the actual test is
      # `if kindIs "string" .clusterLabel`
      # so making it a number is enough to make that false.
      clusterLabel: 0
    prometheusRule:
      enabled: true
      mimirAlerts: true
      mimirRules: true
    grafanaAgent:
      enabled: false
  mimir:
    structuredConfig:
      multitenancy_enabled: false
      memberlist:
        cluster_label: mimir
        cluster_label_verification_disabled: false
        gossip_to_dead_nodes_time: 30s
        dead_node_reclaim_time: 1m
        abort_if_cluster_join_fails: true
        rejoin_interval: 5m
        message_history_buffer_bytes: 1048576
      common:
        storage:
          backend: s3
          s3:
            endpoint: minio.tales-tenant.svc
            access_key_id: ${ACCESS_KEY_ID}
            secret_access_key: ${SECRET_ACCESS_KEY}
      blocks_storage:
        s3:
          bucket_name: mimir-blocks
      alertmanager_storage:
        s3:
          bucket_name: mimir-alertmanager
      ruler_storage:
        s3:
          bucket_name: mimir-ruler
