# https://raw.githubusercontent.com/jupyterhub/zero-to-jupyterhub-k8s/refs/tags/4.2.0/jupyterhub/values.yaml
global:
  safeToShowValues: true
jupyterhub:
  hub:
    networkPolicy:
      enabled: false
    extraEnv:
      OAUTH_CLIENT_ID:
        valueFrom:
          secretKeyRef:
            name: google-oauth-secret
            key: OAUTH_CLIENT_ID
      OAUTH_CLIENT_SECRET:
        valueFrom:
          secretKeyRef:
            name: google-oauth-secret
            key: OAUTH_CLIENT_SECRET

    # c.JupyterHub.authenticator_class = "google"
    # c.OAuthenticator.oauth_callback_url = "https://jupyterhub.local.symmatree.com/hub/oauth_callback"
    # c.OAuthenticator.client_id = "[your oauth2 application id]"
    # c.OAuthenticator.client_secret = "[your oauth2 application secret]"
    config:
      JupyterHub:
        authenticator_class: "google"
        load_roles:
          - name: "admin"
            users:
              - "seth.porter@gmail.com"
      OAuthenticator:
        allow_all: true
        oauth_callback_url: "https://notebook.local.symmatree.com/hub/oauth_callback"
    # These env vars come from a 1Password-created secret.
    extraConfig:
      oauthConfig.py: |
        import os
        c.OAuthenticator.client_id = os.environ["OAUTH_CLIENT_ID"]
        c.OAuthenticator.client_secret = os.environ["OAUTH_CLIENT_SECRET"]

  singleuser:
    # https://jupyter-docker-stacks.readthedocs.io/en/latest/using/recipes.html#using-sudo-within-a-container
    uid: 0
    extraEnv:
      GRANT_SUDO:
        value: "yes"
    allowPrivilegeEscalation: true
    cloudMetadata:
      blockWithIptables: false
    networkPolicy:
      enabled: false
    # `cmd: null` allows the custom CMD of the Jupyter docker-stacks to be used
    # which performs further customization on startup.
    cmd: null
    image:
      name: ghcr.io/symmatree/internal/datascience-notebook-ssh
      tag: 2025-05-26-2
      pullSecrets:
        - name: ghcr-pull-secret
      # Pull always until we're stable.
      pullPolicy: Always
    storage:
      extraVolumeMounts:
        - name: keys
          mountPath: /home/joyvan/.ssh/authorized_keys
          subPath: authorized_keys
      extraVolumes:
        - name: keys
          secret:
            secretName: ssh-secret
            items:
              - key: "public key"
                path: "authorized_keys"
  scheduling:
    userScheduler:
      replicas: 1
  prePuller:
    hook:
      # This hook runs before the secrets get created.
      enabled: false
    continuous:
      enabled: false
  proxy:
    chp:
      networkPolicy:
        enabled: false
    service:
      annotations:
        "external-dns.alpha.kubernetes.io/hostname": "notebook.local.symmatree.com"
    https:
      enabled: true
      type: secret
      # Provisioned in templates/jupyterhub-cert.yaml
      secret:
        name: jupyterhub-tls
        key: tls.key
        crt: tls.crt
      hosts:
        - notebook.local.symmatree.com
